name: feature-pipeline

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.9
  POETRY_VERSION: 1.7.1
  POETRY_URL: https://install.python-poetry.org

jobs:
  feature_pipeline:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}
      
      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Poetry
        run: |
          $poetryScript = (Invoke-WebRequest -Uri $env:POETRY_URL -UseBasicParsing).Content
          Write-Host "Poetry Installation Script:"
          Write-Host $poetryScript
          $poetryScript | py - --version $env:POETRY_VERSION
          [System.Environment]::SetEnvironmentVariable("PATH", "$env:USERPROFILE\.local\bin;$($env:PATH)", [System.EnvironmentVariableTarget]::Process)

      
          
      - name: Run feature generation script
        env: 
          HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }}
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        run: |
          "C:\Users\tkour\.local\bin\poetry" run python scripts/feature_pipeline.py 
       
